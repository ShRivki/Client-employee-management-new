{"version":3,"file":"static/js/634.fcd18694.chunk.js","mappings":"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","sources":["services/rolesService.js","Employee/AddEmployee.js","services/employeeService.js"],"sourcesContent":["import axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport * as actiontype from '../store/actions';\r\n\r\nconst URL = 'https://localhost:7079/api/Role';\r\n\r\nexport const filterRolesByManagementRole = (user, roles) => {\r\n    if (localStorage.getItem('isDirector') === \"true\") {\r\n        return roles;\r\n    }\r\n    const userManagementRoles = user.roles.filter(role => role.isManagement);\r\n    if (userManagementRoles.length === 0) {\r\n        return [];\r\n    }\r\n    const filteredRoles = roles.filter(role => userManagementRoles.some(managedRole => managedRole.role.id === role.id));\r\n    return filteredRoles;\r\n}\r\n\r\nexport const getRoles = (user) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.get(URL);\r\n            dispatch({ type: actiontype.SET_ROLES, data: filterRolesByManagementRole(user, res.data) });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const addRole = (role) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.post(URL, { Name: role.name, Star: role.star });\r\n            dispatch({ type: actiontype.ADD_ROLE, data: res.data });\r\n            Swal.fire({\r\n                icon: \"success\",\r\n                title: `${role.name} Added to the job list`,\r\n                showConfirmButton: false,\r\n                timer: 1000\r\n            });\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: \"error\",\r\n                title: `${error}: Add failed`,\r\n                showConfirmButton: false,\r\n                timer: 1000\r\n            });\r\n            console.error(error);\r\n        }\r\n    }\r\n}\r\n","import { useForm, useFieldArray } from \"react-hook-form\"\r\nimport { yupResolver } from \"@hookform/resolvers/yup\"\r\nimport * as yup from \"yup\"\r\nimport { useLocation } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Button } from 'semantic-ui-react';\r\nimport { addEmployee, editEmployee } from '../services/employeeService'\r\nimport { getRoles, addRole } from '../services/rolesService'\r\nimport '../App.css'\r\nconst schema = yup.object().shape({\r\n    firstName: yup.string().required('Required field').matches(/^[a-zA-Z ]{2,}$/, 'שם חייב להכיל לפחות 3 תווים ולהכיל אותיות באנגלית בלבד'),\r\n    lastName: yup.string().required('Required field').matches(/^[a-zA-Z ]{2,}$/, 'שם חייב להכיל לפחות 3 תווים ולהכיל אותיות באנגלית בלבד'),\r\n    identity: yup.string().required('Required field').matches(/^\\d{9}$/, 'תעודת הזהות חייבת להכיל 9 ספרות בדיוק'),\r\n    startDate: yup.date().required('Required field').min(yup.ref('dateOfBirth'), 'תאריך תחילת העבודה חייב להיות לאחר תאריך הלידה'),\r\n    dateOfBirth: yup.date().required('Required field'),\r\n    password: yup.string().required('Required field').min(6, 'הסיסמה חייבת להכיל לפחות 6 תווים').matches(/(?=.*[a-z])/, 'הסיסמה חייבת לכלול לפחות אות קטנה אחת')\r\n        .matches(/(?=.*[A-Z])/, 'הסיסמה חייבת לכלול לפחות אות גדולה אחת')\r\n        .matches(/(?=.*[0-9])/, 'הסיסמה חייבת לכלול לפחות מספר אחד'),\r\n    gender: yup.number(),\r\n    roles: yup.array().of(yup.object().shape({\r\n        role: yup.object().shape({\r\n            id: yup.number().nullable(),\r\n            name: yup.string().nullable()\r\n        }).nullable(),\r\n        isManagement: yup.boolean().nullable(),\r\n        startDate: yup.date().required('Required field').min(yup.ref('startDate'), 'תאריך תחילת העבודה חייב להיות לאחר תאריך תחילת העבודה'),\r\n    }))\r\n});\r\nexport default () => {\r\n    const navigate = useNavigate();\r\n    const { state } = useLocation();\r\n    const { user, roles } = useSelector(state => ({\r\n        user: state.User.user,\r\n        roles: state.Roles.roles,\r\n    }));\r\n    const dispatch = useDispatch();\r\n    const onSubmit = (data) => {\r\n        var list = []\r\n        data.roles.forEach(role => {\r\n            alert(role.role.id);\r\n            var a = { \"roleId\": role.role.id, \"startDate\": role.startDate, \"isManagement\": role.isManagement }\r\n            list.push(a)\r\n        });\r\n        data.roles = list;\r\n        const employee = { ...data, active: state?.active || true, Id: state?.id };\r\n        state !== null && dispatch(editEmployee((employee))) || state == null && dispatch(addEmployee(employee));\r\n        navigate('/EmployeeList');\r\n    }\r\n    const {\r\n        register,\r\n        handleSubmit,\r\n        formState: { errors },\r\n        control\r\n    } = useForm({\r\n        resolver: yupResolver(schema),\r\n        defaultValues: {\r\n            firstName: state?.firstName,\r\n            lastName: state?.lastName,\r\n            identity: state?.identity,\r\n            password: state?.password,\r\n            startDate: state?.startDate.split('T')[0],\r\n            dateOfBirth: state?.dateOfBirth.split('T')[0],\r\n            gender: state?.gender,\r\n            roles: state?.roles.map(role => ({\r\n                ...role,\r\n                startDate: role.startDate.split('T')[0]\r\n            })) || [],\r\n        }\r\n    })\r\n    const { fields, append, remove } = useFieldArray({\r\n        control,\r\n        name: \"roles\",\r\n    });\r\n    const [roleSelected, setRoleSelected] = useState([]);\r\n    useEffect(() => {\r\n        handleRoleChange();\r\n    }, []);\r\n    function handleRoleChange() {\r\n        const rolesId = [];\r\n        fields.map((x) => { rolesId.push(+x.role.id); })\r\n        console.log(rolesId);\r\n        setRoleSelected(rolesId)\r\n    }\r\n    const [dateStartWork, SetdateStartWork] = useState(state?.startDate.split('T')[0]);\r\n    const [role, SetRole] = useState({ \"name\": \"\" });\r\n    useEffect(() => {\r\n        dispatch(getRoles(user));\r\n    }, [role]);\r\n    function generateInputField(label, registerName, iconName, type = 'text') {\r\n        return (\r\n            <div className=\"field\">\r\n                <label>{label}:</label>\r\n                <div className=\"ui right icon input\">\r\n                    <input type={type} placeholder={label} {...register(registerName)} />\r\n                    <i className={`${iconName} icon`}></i>\r\n                </div>\r\n                {errors[registerName] && <p className=\"ui pointing red basic label\">{errors[registerName]?.message}</p>}\r\n            </div>\r\n        );\r\n    }\r\n    return <div className=\"square-box edit\">\r\n        <br />\r\n        <button className=\"close-button\" onClick={() => navigate(\"/EmployeeList\")}><i className=\"window close icon\"></i></button>\r\n        {localStorage.getItem('isDirector') == \"true\" && (\r\n            <div id=\"form\">\r\n                <input type=\"text\" placeholder=\"enter role\" name=\"role\" onChange={(event) => {\r\n                    SetRole(prevRole => ({ ...prevRole, name: event.target.value }));\r\n                }} />\r\n                <button className=\"button but\" onClick={() => {\r\n                    dispatch(addRole(role));\r\n                }}>הוסף תפקיד</button>\r\n            </div>\r\n        )}\r\n        <div id=\"container\">\r\n            <div id=\"form\" className=\"ui placeholder segment\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <div className=\"ui one column very relaxed stackable grid\">\r\n                        <div className=\"column\">\r\n                            <div className=\"ui form\">\r\n                                <div>\r\n                                    {generateInputField(\"firstName:\", \"firstName\", \"user\")}\r\n                                    {generateInputField(\"lastName:\", \"lastName\", \"user\")}\r\n                                    {generateInputField(\"identity:\", \"identity\", \"address book outline\")}\r\n                                    {generateInputField(\"password:\", \"password\", \"lock\", \"password\")}\r\n                                    {generateInputField(\"birthDate:\", \"dateOfBirth\", \"calendar alternate outline\", \"date\")}\r\n                                    <div className=\"field\">\r\n                                        <label>startDate:</label>\r\n                                        <div className=\"ui rigth icon input\">\r\n                                            <input placeholder=\"startDate\" {...register(\"startDate\")} type=\"date\" onChange={(event) => SetdateStartWork(event.target.value)} />\r\n                                            <i className=\"calendar alternate outline icon\"></i>\r\n                                        </div>\r\n                                        {errors.startDate && <p className=\"ui pointing red basic label\">{errors.startDate?.message}</p>}\r\n                                    </div>\r\n                                    <div className=\"field\">\r\n                                        <label>gender:</label>\r\n                                        <select id=\"gender\" {...register(\"gender\")}>\r\n                                            <option value={1}>male</option>\r\n                                            <option value={2}>female</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <h2>תפקידים:</h2>\r\n                                    {fields.map((x, i) =>\r\n                                        <div key={i} id=\"card\">\r\n                                            <div className=\"field\">\r\n                                                <label>{i + 1} role:</label>\r\n                                                <div>\r\n                                                    <button onClick={() => { remove(i); handleRoleChange() }}><i className=\"trash icon\"></i></button>\r\n                                                    <select {...register(`roles[${i}].role.id`)} defaultValue={state?.roles[i]?.role?.id || \"\"} onChange={(e) => handleRoleChange()}>\r\n                                                        {roles.map((x) => {\r\n                                                            const isRoleSelected = roleSelected.includes(x.id);\r\n                                                            return (<option key={x.id} value={x.id} disabled={isRoleSelected}> {x.name} </option>);\r\n                                                        })}\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                            {generateInputField(\"Management:\", `roles[${i}].isManagement`, \"mail \", \"checkbox\")}\r\n                                            <div className=\"field\">\r\n                                                <label>startDate:</label>\r\n                                                <div className=\"ui input\">\r\n                                                    <input placeholder=\"startDate\" min={dateStartWork} type=\"date\" {...register(`roles[${i}].startDate`)} />\r\n                                                    {errors?.roles && errors.roles[i]?.startDate && <p className=\"ui pointing red basic label\">{errors.roles[i].startDate?.message}</p>}\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>, <br />\r\n                                    )}<button className=\"button but\" onClick={(e) => { e.preventDefault(); append({}); handleRoleChange() }}>add role</button>\r\n                                </div>, <br />\r\n                                <button type=\"submit\" className=\"button but\" >save employee</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form >\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import * as actionType from '../store/actions';\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst URL = 'https://localhost:7079/api/Employee';\r\n\r\nconst filterEmployeesByManagementRole = (user, employees) => {\r\n    if (localStorage.getItem('isDirector') === \"true\")\r\n        return employees;\r\n    const userManagementRoles = user.roles.filter(role => role.isManagement);\r\n    if (userManagementRoles.length === 0) {\r\n        return [];\r\n    }\r\n    const filteredEmployees = employees.filter(employee => {\r\n        return userManagementRoles.some(userRole => {\r\n            return employee.roles.some(role => {\r\n                return role.role.id === userRole.role.id || user.id === employee.id;\r\n            });\r\n        });\r\n    });\r\n    return filteredEmployees;\r\n}\r\n\r\nexport const getEmployee = (user) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.get(URL);\r\n            const filteredEmployees = filterEmployeesByManagementRole(user, res.data);\r\n            dispatch({ type: actionType.GET_EMPLOYEES, data: filteredEmployees });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const FindEmployee = (user, name) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.get(`${URL}/name=${name}`);\r\n            const filteredEmployees = filterEmployeesByManagementRole(user, res.data);\r\n            dispatch({ type: actionType.GET_EMPLOYEES, data: filteredEmployees });\r\n        } catch (error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteEmployee = (EmployeeId) => {\r\n    return async dispatch => {\r\n        try {\r\n            await axios.delete(`${URL}/${EmployeeId}`);\r\n            Swal.fire({\r\n                position: \"top\",\r\n                icon: \"success\",\r\n                title: \"The employee has been marked as inactive\",\r\n                showConfirmButton: false,\r\n                timer: 1000\r\n            });\r\n            dispatch({ type: actionType.DELETE_EMPLOYEE, data: EmployeeId });\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: \"error\",\r\n                title: \"Oops...\",\r\n                text: \"Error deleting employee\",\r\n                footer: '<a href=\"#\">Back to adding an employee?/a>'\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const addEmployee = (data) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.post(URL, data);\r\n            dispatch({ type: actionType.ADD_EMPLOYEE, data: res.data });\r\n            Swal.fire({\r\n                position: \"top\",\r\n                icon: \"success\",\r\n                title: \"The employee was successfully added\",\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            });\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: \"error\",\r\n                title: \"Oops...\",\r\n                text: \"Adding employee failed\",\r\n                footer: '<a href=\"#\">Back to adding an employee?</a>'\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const editEmployee = (data) => {\r\n    return async dispatch => {\r\n        try {\r\n            const res = await axios.put(`${URL}/${data.Id}`, { ...data });\r\n            dispatch({ type: actionType.EDIT_EMPLOYEE, data: res.data });\r\n            Swal.fire({\r\n                position: \"top\",\r\n                icon: \"success\",\r\n                title: \"The employee details have been updated successfully\",\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            });\r\n        } catch (error) {\r\n            Swal.fire({\r\n                icon: \"error\",\r\n                title: \"Oops...\",\r\n                text: \"Error editing employee\",\r\n                footer: '<a href=\"#\">Back to employees/a>'\r\n            });\r\n        }\r\n    }\r\n}\r\n"],"names":["URL","filterRolesByManagementRole","user","roles","localStorage","getItem","userManagementRoles","filter","role","isManagement","length","some","managedRole","id","schema","yup","shape","firstName","required","matches","lastName","identity","startDate","min","dateOfBirth","password","gender","of","nullable","name","_errors$startDate","navigate","useNavigate","state","useLocation","useSelector","User","Roles","dispatch","useDispatch","register","handleSubmit","formState","errors","control","useForm","resolver","yupResolver","defaultValues","split","map","fields","append","remove","useFieldArray","roleSelected","setRoleSelected","useState","handleRoleChange","rolesId","x","push","console","log","useEffect","dateStartWork","SetdateStartWork","SetRole","generateInputField","label","registerName","iconName","_errors$registerName","type","arguments","undefined","_jsxs","className","children","_jsx","placeholder","concat","message","async","res","axios","get","actiontype","data","error","getRoles","onClick","onChange","event","prevRole","target","value","post","Name","Star","star","Swal","icon","title","showConfirmButton","timer","addRole","onSubmit","list","forEach","alert","a","employee","active","Id","editEmployee","addEmployee","i","_state$roles$i","_state$roles$i$role","_errors$roles$i","_errors$roles$i$start","defaultValue","e","isRoleSelected","includes","disabled","preventDefault","filterEmployeesByManagementRole","employees","userRole","getEmployee","filteredEmployees","actionType","FindEmployee","deleteEmployee","EmployeeId","delete","position","text","footer","put"],"sourceRoot":""}