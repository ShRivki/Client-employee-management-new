{"version":3,"file":"static/js/199.0bcba74c.chunk.js","mappings":"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","sources":["User/LogIn.js","services/userService.js"],"sourcesContent":["import { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\";\r\nimport * as yup from \"yup\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { logIn } from '../services/userService';\r\n\r\nconst schema = yup.object({\r\n  UserName: yup.string().required('Required field'),\r\n  Password: yup.string().required('Required field').min(3, 'סיסמא חייבת להכיל לפחות 3 תווים'),\r\n}).required();\r\n\r\nexport default function App() {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { register, handleSubmit, formState: { errors } } = useForm({\r\n    resolver: yupResolver(schema),\r\n  });\r\n\r\n  const onSubmit = (data) => {\r\n    dispatch(logIn(data, navigate));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div id=\"container\" style={{ display: \"flex\", justifyContent: 'center', paddingTop: \"50px\" }}>\r\n        <div id=\"form\" className=\"ui placeholder segment\">\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div className=\"ui one column very relaxed stackable grid\">\r\n              <div className=\"column\">\r\n                <div className=\"ui form\">\r\n                  <div className=\"field\">\r\n                    <label>שם משתמש:</label>\r\n                    <div className=\"ui right icon input\">\r\n                      <i className=\"user icon\"></i>\r\n                      <input placeholder=\"הכנס שם משתמש\" {...register(\"UserName\")} />\r\n                    </div>\r\n                    {errors.UserName && <p className=\"ui pointing red basic label\">{errors.UserName?.message}</p>}\r\n                  </div>\r\n                  <div className=\"field\">\r\n                    <label>סיסמא:</label>\r\n                    <div className=\"ui right icon input\">\r\n                      <i className=\"lock icon\"></i>\r\n                      <input type=\"password\" placeholder=\"הכנס סיסמא\" {...register(\"Password\")} />\r\n                    </div>\r\n                    {errors.Password && <p className=\"ui pointing red basic label\">{errors.Password?.message}</p>}\r\n                  </div>\r\n                  <button className=\"ui submit button\" style={{ backgroundColor: \"rgb(19 23 122) \", color: 'white' }} type=\"submit\">Connection</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\nimport * as actionType from '../store/actions';\r\n\r\nconst URL = 'https://localhost:7079/api/Employee';\r\n\r\nexport const logIn = (data, navigate) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.post(`${URL}/Login`, { Name: data.UserName, Password: data.Password });\r\n            const user = response.data;\r\n\r\n            dispatch({ type: actionType.LOG_IN, user });\r\n            localStorage.setItem(\"user\", JSON.stringify(user));\r\n            const isDirector = user.roles.some(role => role.role.name === \"Director\");\r\n            localStorage.setItem(\"isDirector\", isDirector ? \"true\" : \"false\");\r\n            navigate(\"/\");\r\n\r\n            Swal.fire({\r\n                position: \"top\",\r\n                title: `${user.firstName} Hello to `,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            });\r\n\r\n            setTimeout(function() {\r\n                window.location.reload();\r\n            }, 1300);\r\n        } catch (error) {\r\n            console.log(error.message);\r\n\r\n            Swal.fire({\r\n                position: \"top\",\r\n                title: `You are not registered in the system ${error.message}`,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            });\r\n        }\r\n    };\r\n};\r\n\r\nexport const logOut = (navigate) => {\r\n    return dispatch => {\r\n        Swal.fire({\r\n            title: \"Oops...\",\r\n            showCancelButton: true,\r\n            showDenyButton: false,\r\n            confirmButtonText: \"go out\",\r\n            cancelButtonText: \"cancel\",\r\n        }).then((r) => {\r\n            if (r.isConfirmed) {\r\n                dispatch({ type: actionType.LOG_OUT });\r\n                Swal.fire({\r\n                    title: \"By By:)\", showConfirmButton: false,\r\n                    timer: 800\r\n                });\r\n            }\r\n            navigate(\"/HomePage\")\r\n        });\r\n    };\r\n};\r\n\r\nexport const signIn = (data, navigate) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await axios.post(URL, data);\r\n            const user = response.data;\r\n\r\n            dispatch({ type: actionType.LOG_IN, user });\r\n            Swal.fire({\r\n                position: \"top\",\r\n                title: `${user.Name} The employee was successfully added`,\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            });\r\n            navigate(\"/\");\r\n        } catch (error) {\r\n            Swal.fire({\r\n                position: \"top\",\r\n                title: \"This employee is registered in the system!\",\r\n                showConfirmButton: false,\r\n                timer: 1500\r\n            });\r\n            navigate(\"/HomePage\");\r\n        }\r\n    };\r\n};\r\n"],"names":["schema","yup","UserName","required","Password","min","App","_errors$UserName","_errors$Password","navigate","useNavigate","dispatch","useDispatch","register","handleSubmit","formState","errors","useForm","resolver","yupResolver","_jsx","_Fragment","children","id","style","display","justifyContent","paddingTop","className","onSubmit","data","logIn","_jsxs","placeholder","message","type","backgroundColor","color","URL","async","user","axios","post","concat","Name","actionType","localStorage","setItem","JSON","stringify","isDirector","roles","some","role","name","Swal","position","title","firstName","showConfirmButton","timer","setTimeout","window","location","reload","error","console","log","logOut","showCancelButton","showDenyButton","confirmButtonText","cancelButtonText","then","r","isConfirmed"],"sourceRoot":""}